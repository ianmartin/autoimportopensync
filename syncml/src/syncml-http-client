<?xml version="1.0"?>
<config>
  <!-- authentication type to use. Leave empty to not require an authentication -->
  <!-- supported values are:                                  -->
  <!--   BASIC - unsecure but widely supported                -->
  <!--   MD5   - more secure but not supported by all servers -->
  <auth>NONE</auth>

  <!-- username to use. Leave empty to not require a username -->
  <username></username>
  
  <!-- the password for the username -->
  <password></password>
  
  <!-- The url that you want the server to listen on. This has to be set on the mobile as well. example: "/" -->
  <url>http://127.0.0.1:8080</url>

  <!-- if you have a proxy (e.g. froma firewall) then you can enter it here -->
  <!-- <proxy>http://127.0.0.1:8080</proxy> -->

  <!-- if you use https then it is strongly recommend to use a -->
  <!-- file with all trusted certification authorities inside  -->
  <!-- libsoup is the http library behind libsyncml            -->
  <!-- libsoup actually only supports a cafile and no explicit -->
  <!-- peer certificates                                       -->
  <!-- <cafile>/etc/calist.pem</cafile>                       -->
 
  <!-- Workaround around for servers use local timestamps and _no_ UTC timestamps! -->
  <onlyLocaltime>0</onlyLocaltime>
  
  <!-- WARNING: some servers require recvLimit and maxObjSize                    -->
  <!-- The SyncML specification only requires the meta information               -->
  <!-- if large objects are enabled.                                             -->
  <!-- Nevertheless the most mobiles send it because of their limited resources. -->

  <recvLimit>40000</recvLimit>
  
  <maxObjSize>4000000</maxObjSize>

  <!-- The old default behavior of OpenSync was to use the same      -->
  <!-- format like the connecting client. Some clients which were    -->
  <!-- connected with another software expect always the anchor      -->
  <!-- format of this software. Therefore it is possible to          -->
  <!-- configure the behaviour of OpenSync's SyncML plugin.          -->
  <!--                                                               -->
  <!--     0 ==> number format beginning with 1                      -->
  <!--     1 ==> timestamp format                                    -->
  <!--                                                               -->
  <!-- If it is not a SLOW-SYNC then this option is ignored and the  -->
  <!-- behavior is determined from the cached Last anchor.           -->

  <useTimestampAnchor>1</useTimestampAnchor>
  
  <!-- Contact database -->
  <database>
     <name>Contacts</name>
     <objtype>contact</objtype>
     <objformat>vcard30</objformat>
  </database>
  
  <!-- Calendar database -->
  <database>
     <name>Calendar</name>
     <objtype>event</objtype>
     <objformat>vevent20</objformat>
  </database>

  <!-- Note database -->
  <database>
     <name>Notes</name>
     <objtype>note</objtype>
     <objformat>vnote11</objformat>
  </database>

  <!-- Example: Oracle Collaboration Suite SyncML component -->
  <!--

  <database>
     <name>./Contacts</name>
     <objtype>contact</objtype>
     <objformat>vcard30</objformat>
  </database>
  <database>
     <name>./Calendar/Events</name>
     <objtype>event</objtype>
     <objformat>vevent20</objformat>
  </database>
  <database>
     <name>./Calendar/Tasks</name>
     <objtype>todo</objtype>
     <objformat>vevent20</objformat>
  </database>

   -->

  <!-- This is the global calendar object of Oracle -->
  <!-- I think we can ignore it. -->
  <!--
  <database>
     <name>./Calendar</name>
     <objtype>event</objtype>
     <objformat>vevent20</objformat>
  </database>

   -->

  <!-- this is necessary for some servers because they work with profiles   -->
  <!-- Oracle Collaboration Suite does such things                          -->
  <!-- so if somebody denies your client (e.g. uncertifiedclients=disallow) -->
  <!-- then simply fake such a superious client ;-D                         -->
  <fake_device>1</fake_device>
  <syncml_version>1.1</syncml_version>
  <fake_manufacturer>NOKIA</fake_manufacturer>
  <fake_model>E60</fake_model>
  <fake_software_version>1.0</fake_software_version>

  <!-- ========================== -->
  <!-- Examples for faking phones -->
  <!-- ========================== -->

  <!-- Nokia Series 40 -->
  <!--
  <syncml_version>1.1</syncml_version>
  <fake_manufacturer>NOKIA</fake_manufacturer>
  <fake_model>6800</fake_model>
  <fake_software_version>1.0</fake_software_version>
  -->
  <!-- Nokia Series 60 -->
  <!--
  <syncml_version>1.1</syncml_version>
  <fake_manufacturer>NOKIA</fake_manufacturer>
  <fake_model>6600</fake_model>
  <fake_software_version>1.0</fake_software_version>
  -->
  <!-- Nokia Series 80 -->
  <!--
  <syncml_version>1.1</syncml_version>
  <fake_manufacturer>NOKIA</fake_manufacturer>
  <fake_model>9300</fake_model>
  <fake_software_version>1.0</fake_software_version>
  -->
  <!-- Nokia E-Series (supports SyncML 1.1 and 1.2 -->
  <!--
  <syncml_version>1.1</syncml_version>
  <fake_manufacturer>NOKIA</fake_manufacturer>
  <fake_model>E60</fake_model>
  <fake_software_version>1.0</fake_software_version>
  -->
  <!--
  <syncml_version>1.2</syncml_version>
  <fake_manufacturer>NOKIA</fake_manufacturer>
  <fake_model>E60</fake_model>
  <fake_software_version>1.0</fake_software_version>
  -->

</config>
