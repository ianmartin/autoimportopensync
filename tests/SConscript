Import('*')

if testenv['enable_tests'] == 1:

	support = testenv.Library('support', ['support.c'], LIBS = ['opensync', 'check'])
	testenv.Append(LIBPATH = '.')
	testenv.Program('error', ['check_error.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('module', ['module-tests/check_module.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('ipc', ['ipc-tests/check_ipc.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('checkdata', ['data-tests/check_data.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('conv', ['format-tests/check_conv.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('time', ['format-tests/check_time.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('converter', ['format-tests/check_converter.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('formatenv', ['format-tests/check_format_env.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('objformat', ['format-tests/check_objformat.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('merger', ['merger-tests/check_merger.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('capabilities', ['merger-tests/check_capabilities.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('archive', ['archive-tests/check_archive.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('xmlformat', ['merger-tests/check_xmlformat.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('client', ['client-tests/check_client.c'], LIBS = ['opensync', 'check', support])

	testenv.Program('mapping', ['mapping-tests/check_mapping.c'], LIBS = ['opensync', 'check', support])

	conversion = testenv.Library('conversion', ['conversion-tests/conversion.c'], LIBS = ['opensync', 'check', support])

	testenv.Program('proxy', ['client-tests/check_proxy.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('engine', ['engine-tests/check_engine.c'], LIBS = ['opensync', 'check', support])
	testenv.Program('engine-error', ['engine-tests/check_engine_error.c'], LIBS = ['opensync', 'check', support])
	
	testenv.Program('sync', ['sync-tests/check_sync.c'], LIBS = ['opensync', 'check', support])

	mocksync = testenv.SharedLibrary('mock-sync', ['mock-plugin/mock_sync.c'], LIBS = ['opensync'])
	mockformat = testenv.SharedLibrary('mock-format', ['mock-plugin/mock_format.c'], LIBS = ['opensync'])

	testenv.Install(install_plugin, mocksync)
	testenv.Install(install_format, mockformat)
