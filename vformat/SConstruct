import sys
import os
sys.path.append('build')
from osync_support import *


#Define the default values for some variables. Take note, that they might
#get overwriten by the scons files in the build directory
config = {
	'name': "vformat",
	'version': "0.32",
	'major': 1,
	'minor': 0,
	'micro': 0,
	'plugin_version': 1,
	'path_sep': r"/"
}

# Get our configuration options:
env = Environment(
		ENV = os.environ,
		tools=['default', 'osync_support', 'pkgconfig', 'opensync', 'glib', 'libxml', 'check'],
		toolpath=['./', './build'])

A=env.get_opts().add
A('debug', 'Should debugging be enabled?', 1)
A(BoolOption('debug_modules', 'Should unloading of shared modules be avoided (DEBUGGING ONLY!)', 0))
A('APPEND_LDFLAGS', 'Linker flags')
A('APPEND_CCFLAGS', 'Compiler flags')
A('DESTDIR', 'Set the root directory to install into ( /path/to/DESTDIR )', '')

target_dir = SelectBuildDir('build')
sys.path.append(target_dir)
from osync_build import *
target_dir = '#' + target_dir
configure(env.get_opts())
SConsignFile()

env.get_opts().update()
env.get_opts().save()
env.get_opts().update()

Help("""
++++++++++++++++++++++++++++++++++++
Welcome to the OpenSync Help System!


You can set the following options:
""" + env.get_opts().generate_help_text())

env.Append(CCFLAGS = Split('$APPEND_CCFLAGS'))
env.Append(LDFLAGS = Split('$APPEND_LDFLAGS'))

testenv = check(env, config)
if env.GetOption('clean'):
	try: os.unlink("config.h")
	except OSError: pass
elif 'dist' in sys.argv:
	env.dist(config["name"], config["version"])
else:
	env.write_config_header("config.h")

install_prefix = '${DESTDIR}$prefix'
install_lib = '${DESTDIR}$prefix/$libsuffix'
install_bin = '${DESTDIR}$prefix/bin'
install_format = '${DESTDIR}%s' % env["OPENSYNC_FORMATSDIR"]

Export('env opts testenv install_prefix install_lib install_bin install_format')

SConscript(['src/SConscript', 'tools/SConscript', 'tests/SConscript'])
BuildDir(target_dir, 'vformat', duplicate=0)
