# - Try to find the GLIB2 libraries
# Once done this will define
#
#  GLIB2_FOUND - system has glib2
#  GLIB2_INCLUDE_DIR - the glib2 include directory
#  GLIB2_LIBRARIES - glib2 library

IF ( GLIB2_INCLUDE_DIR AND GLIB2_LIBRARIES )
    SET( GLIB2_FIND_QUIETLY TRUE )
ENDIF ( GLIB2_INCLUDE_DIR AND GLIB2_LIBRARIES )

IF ( NOT WIN32 )
   INCLUDE( UsePkgConfig )
   PKGCONFIG( glib-2.0 _LibGLIB2IncDir _LibGLIB2LinkDir _LibGLIB2LinkFlags _LibGLIB2Cflags )
ENDIF (NOT WIN32)

# Look for glib2 include dir and libraries
FIND_LIBRARY( GLIB2_LIBRARIES NAMES glib-2.0 PATHS ${_LibGLIB2LinkDir} )

FIND_PATH( GLIB2_INCLUDE_DIR glib.h PATH_SUFFIXES glib-2.0 PATHS ${_LibGLIB2IncDir} )

GET_FILENAME_COMPONENT(glib2LibDir "${GLIB2_LIBRARIES}" PATH )
FIND_PATH( GLIB2_INTERNAL_INCLUDE_DIR glibconfig.h PATH_SUFFIXES glib-2.0/include PATHS ${_LibGLIB2LinkDir} "${glib2LibDir}" ${CMAKE_SYSTEM_LIBRARY_PATH} )

SET( GLIB2_INCLUDE_DIR ${GLIB2_INCLUDE_DIR} "${GLIB2_INTERNAL_INCLUDE_DIR}" )


IF ( GLIB2_INCLUDE_DIR AND GLIB2_LIBRARIES )
	IF ( NOT GLIB2_FIND_QUIETLY )
		MESSAGE ( STATUS "Found glib2: ${GLIB2_LIBRARIES}" )
	ENDIF ( NOT GLIB2_FIND_QUIETLY )
ELSE ( GLIB2_INCLUDE_DIR AND GLIB2_LIBRARIES )
	IF ( NOT GLIB2_FIND_QUIETLY )
		MESSAGE ( STATUS "Could NOT found glib2." )
	ENDIF ( NOT GLIB2_FIND_QUIETLY )
ENDIF ( GLIB2_INCLUDE_DIR AND GLIB2_LIBRARIES )

# Hide advanced variables from CMake GUIs
MARK_AS_ADVANCED( GLIB2_INCLUDE_DIR GLIB2_LIBRARIES )

