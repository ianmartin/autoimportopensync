# - Try to find the GTHREAD2 libraries
# Once done this will define
#
#  GTHREAD2_FOUND - system has gthread2
#  GTHREAD2_INCLUDE_DIR - the gthread2 include directory
#  GTHREAD2_LIBRARIES - gthread2 library

IF ( GTHREAD2_INCLUDE_DIR AND GTHREAD2_LIBRARIES )
    SET( GTHREAD2_FIND_QUIETLY TRUE )
ENDIF ( GTHREAD2_INCLUDE_DIR AND GTHREAD2_LIBRARIES )

IF ( NOT WIN32 )
   INCLUDE( UsePkgConfig )
   PKGCONFIG( gthread-2.0 _LibGTHREAD2IncDir _LibGTHREAD2LinkDir _LibGTHREAD2LinkFlags _LibGTHREAD2Cflags )
ENDIF ( NOT WIN32 )

# Look for gmodule2 include dir and libraries
FIND_PATH( GTHREAD2_INCLUDE_DIR gthread.h PATH_SUFFIXES glib-2.0/glib PATHS ${_LibGTHREAD2IncDir} )

FIND_LIBRARY( GTHREAD2_LIBRARIES NAMES gthread-2.0 PATHS ${_LibGTHREAD2LinkDir} )

IF ( GTHREAD2_INCLUDE_DIR AND GTHREAD2_LIBRARIES )
	IF ( NOT GTHREAD2_FIND_QUIETLY )
		MESSAGE ( STATUS "Found gthread2: ${GTHREAD2_LIBRARIES}" )
	ENDIF ( NOT GTHREAD2_FIND_QUIETLY )
ELSE ( GTHREAD2_INCLUDE_DIR AND GTHREAD2_LIBRARIES )
	IF ( NOT GTHREAD2_FIND_QUIETLY )
		MESSAGE ( STATUS "Could NOT found gthread2." )
	ENDIF ( NOT GTHREAD2_FIND_QUIETLY )
ENDIF ( GTHREAD2_INCLUDE_DIR AND GTHREAD2_LIBRARIES )

# Hide advanced variables from CMake GUIs
MARK_AS_ADVANCED( GTHREAD2_INCLUDE_DIR GTHREAD2_LIBRARIES )

