Import('*')

env.Append( CPPPATH = '.' )

# The basic plugins

file = env.SharedLibrary('file', ['file.c'], LIBS = ['opensync'], LIBPATH = '#opensync')
data = env.SharedLibrary('data', ['data.c'], LIBS = ['opensync'], LIBPATH = '#opensync')

contact = env.SharedLibrary('contact', ['contact.c'], LIBS = ['opensync'], LIBPATH = '#opensync')
event = env.SharedLibrary('event', ['event.c'], LIBS = ['opensync'], LIBPATH = '#opensync')
todo = env.SharedLibrary('todo', ['todo.c'], LIBS = ['opensync'], LIBPATH = '#opensync')

# The vformat/xmlformat support libraries
vformat = env.SharedLibrary('opensync-vformat', ['vformats-xml/vformat.c'], LIBS = ['opensync'], LIBPATH = '#opensync')
xmlformat = env.SharedLibrary('opensync-xmlformat', ['vformats-xml/xmlformat.c'], LIBS = ['opensync'], LIBPATH = '#opensync')

# The xml formats
xmlformatvcard = env.SharedLibrary('xmlformat-vcard', ['vformats-xml/xmlformat-vcard.c'], LIBS = ['opensync', 'opensync-vformat', 'opensync-xmlformat'], LIBPATH = ['#opensync', '.'])
xmlformatvcal = env.SharedLibrary('xmlformat-vcal', ['vformats-xml/xmlformat-vcal.c'], LIBS = ['opensync', 'opensync-vformat', 'opensync-xmlformat'], LIBPATH = ['#opensync', '.'])
xmlformatvtodo = env.SharedLibrary('xmlformat-vtodo', ['vformats-xml/xmlformat-vtodo.c'], LIBS = ['opensync', 'opensync-vformat', 'opensync-xmlformat'], LIBPATH = ['#opensync', '.'])
xmlformatdoc = env.SharedLibrary('xmlformat-doc', ['vformats-xml/xmlformat-doc.c'], LIBS = ['opensync'], LIBPATH = '#opensync')


env.Install(install_format, file)
env.Install(install_format, data)
env.Install(install_format, contact)
env.Install(install_format, event)
env.Install(install_format, todo)
env.Install(install_format, xmlformatvcard)
env.Install(install_format, xmlformatvcal)
env.Install(install_format, xmlformatvtodo)
env.Install(install_format, xmlformatdoc)
env.Install(install_inc + '/opensync-1.0/opensync/', 'file.h')
env.Install(install_lib, vformat)
env.Install(install_lib, xmlformat)
env.Alias('install', install_prefix)
